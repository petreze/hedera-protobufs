syntax = "proto3";

package proto;
/*
 * Copyright (C) 2023 Hedera Hashgraph, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * REVIEW NOTES:
 *
 * It isn't clear whether we need or want these types. We could use the standard protobuf wrapper types
 * (https://protobuf.dev/reference/protobuf/google.protobuf/), or we could "typedef" these as needed into a
 * specific message type. For example, we know we have byte[] as a key into the alias->account map, and that is
 * a legitimate case. We could use BytesValue, or we could create an "Alias" message that is a wrapper around a
 * byte[]. The advantage to Alias is it provides some kind of migration path forward if we wanted to add things
 * to it. On the other hand, other APIs are byte[] directly for alias, so it is probably always going to be
 * a byte[], so we can use BytesValue instead.
 *
 * That tradeoff should be considered in every place where any of these types are used.
 */

/**
 * This proto file contains primitive value messages.
 * These are intended only for situations where the entire value to be stored in state is a single
 * primitive.  These should never be used as components of another message; use the protobuf
 * type instead.
 */

option java_package = "com.hederahashgraph.api.proto.java";
// <<<pbj.java_package = "com.hedera.hapi.node.state.primitives">>> This comment is special code for setting PBJ Compiler java package
option java_multiple_files = true;

/**
 * A single 64-bit number with no particular meaning.
 */
message ProtoLong {
    int64 value = 1;
}

/**
 * A single 32-bit number with no particular meaning.
 */
message ProtoInteger {
    int32 value = 1;
}

/**
 * A single boolean with no particular meaning.
 */
message ProtoBoolean {
    bool value = 1;
}

/**
 * A single string with no particular meaning.
 */
message ProtoString {
    string value = 1;
}

/**
 * A single byte array with no particular meaning.
 */
message ProtoBytes {
    bytes value = 1;
}

